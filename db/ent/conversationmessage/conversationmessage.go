// Code generated by ent, DO NOT EDIT.

package conversationmessage

import (
	"time"
)

const (
	// Label holds the string label denoting the conversationmessage type in the database.
	Label = "conversation_message"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldCreatedAt holds the string denoting the created_at field in the database.
	FieldCreatedAt = "created_at"
	// FieldUpdatedAt holds the string denoting the updated_at field in the database.
	FieldUpdatedAt = "updated_at"
	// FieldDeleted holds the string denoting the deleted field in the database.
	FieldDeleted = "deleted"
	// FieldUUID holds the string denoting the uuid field in the database.
	FieldUUID = "uuid"
	// FieldUserID holds the string denoting the user_id field in the database.
	FieldUserID = "user_id"
	// FieldConversationID holds the string denoting the conversation_id field in the database.
	FieldConversationID = "conversation_id"
	// FieldRequest holds the string denoting the request field in the database.
	FieldRequest = "request"
	// FieldResponse holds the string denoting the response field in the database.
	FieldResponse = "response"
	// FieldTokenUsage holds the string denoting the token_usage field in the database.
	FieldTokenUsage = "token_usage"
	// FieldModel holds the string denoting the model field in the database.
	FieldModel = "model"
	// EdgeConversations holds the string denoting the conversations edge name in mutations.
	EdgeConversations = "conversations"
	// Table holds the table name of the conversationmessage in the database.
	Table = "conversation_messages"
	// ConversationsTable is the table that holds the conversations relation/edge.
	ConversationsTable = "conversation_messages"
	// ConversationsInverseTable is the table name for the Conversation entity.
	// It exists in this package in order to avoid circular dependency with the "conversation" package.
	ConversationsInverseTable = "conversations"
	// ConversationsColumn is the table column denoting the conversations relation/edge.
	ConversationsColumn = "conversation_conversation_messages"
)

// Columns holds all SQL columns for conversationmessage fields.
var Columns = []string{
	FieldID,
	FieldCreatedAt,
	FieldUpdatedAt,
	FieldDeleted,
	FieldUUID,
	FieldUserID,
	FieldConversationID,
	FieldRequest,
	FieldResponse,
	FieldTokenUsage,
	FieldModel,
}

// ForeignKeys holds the SQL foreign-keys that are owned by the "conversation_messages"
// table and are not defined as standalone fields in the schema.
var ForeignKeys = []string{
	"conversation_conversation_messages",
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	for i := range ForeignKeys {
		if column == ForeignKeys[i] {
			return true
		}
	}
	return false
}

var (
	// DefaultCreatedAt holds the default value on creation for the "created_at" field.
	DefaultCreatedAt func() time.Time
	// DefaultUpdatedAt holds the default value on creation for the "updated_at" field.
	DefaultUpdatedAt func() time.Time
	// UpdateDefaultUpdatedAt holds the default value on update for the "updated_at" field.
	UpdateDefaultUpdatedAt func() time.Time
	// DefaultDeleted holds the default value on creation for the "deleted" field.
	DefaultDeleted bool
	// DefaultModel holds the default value on creation for the "model" field.
	DefaultModel string
)
