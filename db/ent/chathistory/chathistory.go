// Code generated by ent, DO NOT EDIT.

package chathistory

import (
	"time"
)

const (
	// Label holds the string label denoting the chathistory type in the database.
	Label = "chat_history"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldCreatedAt holds the string denoting the created_at field in the database.
	FieldCreatedAt = "created_at"
	// FieldUpdatedAt holds the string denoting the updated_at field in the database.
	FieldUpdatedAt = "updated_at"
	// FieldDeleted holds the string denoting the deleted field in the database.
	FieldDeleted = "deleted"
	// FieldUserID holds the string denoting the user_id field in the database.
	FieldUserID = "user_id"
	// FieldConversationIdx holds the string denoting the conversation_idx field in the database.
	FieldConversationIdx = "conversation_idx"
	// FieldConversationID holds the string denoting the conversation_id field in the database.
	FieldConversationID = "conversation_id"
	// FieldMessageID holds the string denoting the message_id field in the database.
	FieldMessageID = "message_id"
	// FieldMessageIdx holds the string denoting the message_idx field in the database.
	FieldMessageIdx = "message_idx"
	// FieldRequest holds the string denoting the request field in the database.
	FieldRequest = "request"
	// FieldResponse holds the string denoting the response field in the database.
	FieldResponse = "response"
	// FieldTokenUsage holds the string denoting the token_usage field in the database.
	FieldTokenUsage = "token_usage"
	// Table holds the table name of the chathistory in the database.
	Table = "chat_histories"
)

// Columns holds all SQL columns for chathistory fields.
var Columns = []string{
	FieldID,
	FieldCreatedAt,
	FieldUpdatedAt,
	FieldDeleted,
	FieldUserID,
	FieldConversationIdx,
	FieldConversationID,
	FieldMessageID,
	FieldMessageIdx,
	FieldRequest,
	FieldResponse,
	FieldTokenUsage,
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}

var (
	// DefaultCreatedAt holds the default value on creation for the "created_at" field.
	DefaultCreatedAt func() time.Time
	// DefaultUpdatedAt holds the default value on creation for the "updated_at" field.
	DefaultUpdatedAt func() time.Time
	// UpdateDefaultUpdatedAt holds the default value on update for the "updated_at" field.
	UpdateDefaultUpdatedAt func() time.Time
	// DefaultDeleted holds the default value on creation for the "deleted" field.
	DefaultDeleted bool
)
