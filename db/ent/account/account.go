// Code generated by ent, DO NOT EDIT.

package account

import (
	"fmt"
	"time"
)

const (
	// Label holds the string label denoting the account type in the database.
	Label = "account"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldCreatedAt holds the string denoting the created_at field in the database.
	FieldCreatedAt = "created_at"
	// FieldUpdatedAt holds the string denoting the updated_at field in the database.
	FieldUpdatedAt = "updated_at"
	// FieldDeleted holds the string denoting the deleted field in the database.
	FieldDeleted = "deleted"
	// FieldUUID holds the string denoting the uuid field in the database.
	FieldUUID = "uuid"
	// FieldUserID holds the string denoting the user_id field in the database.
	FieldUserID = "user_id"
	// FieldUserType holds the string denoting the user_type field in the database.
	FieldUserType = "user_type"
	// FieldDatabaseID holds the string denoting the database_id field in the database.
	FieldDatabaseID = "database_id"
	// FieldAccessToken holds the string denoting the access_token field in the database.
	FieldAccessToken = "access_token"
	// FieldNotionUserID holds the string denoting the notion_user_id field in the database.
	FieldNotionUserID = "notion_user_id"
	// FieldNotionUserEmail holds the string denoting the notion_user_email field in the database.
	FieldNotionUserEmail = "notion_user_email"
	// FieldIsLatestSchema holds the string denoting the is_latest_schema field in the database.
	FieldIsLatestSchema = "is_latest_schema"
	// FieldIsOpenaiAPIUser holds the string denoting the is_openai_api_user field in the database.
	FieldIsOpenaiAPIUser = "is_openai_api_user"
	// FieldOpenaiAPIKey holds the string denoting the openai_api_key field in the database.
	FieldOpenaiAPIKey = "openai_api_key"
	// FieldAPIKey holds the string denoting the api_key field in the database.
	FieldAPIKey = "api_key"
	// FieldIsAdmin holds the string denoting the is_admin field in the database.
	FieldIsAdmin = "is_admin"
	// Table holds the table name of the account in the database.
	Table = "accounts"
)

// Columns holds all SQL columns for account fields.
var Columns = []string{
	FieldID,
	FieldCreatedAt,
	FieldUpdatedAt,
	FieldDeleted,
	FieldUUID,
	FieldUserID,
	FieldUserType,
	FieldDatabaseID,
	FieldAccessToken,
	FieldNotionUserID,
	FieldNotionUserEmail,
	FieldIsLatestSchema,
	FieldIsOpenaiAPIUser,
	FieldOpenaiAPIKey,
	FieldAPIKey,
	FieldIsAdmin,
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}

var (
	// DefaultCreatedAt holds the default value on creation for the "created_at" field.
	DefaultCreatedAt func() time.Time
	// DefaultUpdatedAt holds the default value on creation for the "updated_at" field.
	DefaultUpdatedAt func() time.Time
	// UpdateDefaultUpdatedAt holds the default value on update for the "updated_at" field.
	UpdateDefaultUpdatedAt func() time.Time
	// DefaultDeleted holds the default value on creation for the "deleted" field.
	DefaultDeleted bool
	// DefaultIsLatestSchema holds the default value on creation for the "is_latest_schema" field.
	DefaultIsLatestSchema bool
	// DefaultIsOpenaiAPIUser holds the default value on creation for the "is_openai_api_user" field.
	DefaultIsOpenaiAPIUser bool
	// DefaultIsAdmin holds the default value on creation for the "is_admin" field.
	DefaultIsAdmin bool
)

// UserType defines the type for the "user_type" enum field.
type UserType string

// UserTypeWechat is the default value of the UserType enum.
const DefaultUserType = UserTypeWechat

// UserType values.
const (
	UserTypeWechat    UserType = "wechat"
	UserTypeTelegram  UserType = "telegram"
	UserTypeGithub    UserType = "github"
	UserTypeGoogle    UserType = "google"
	UserTypeTwitter   UserType = "twitter"
	UserTypeMicrosoft UserType = "microsoft"
)

func (ut UserType) String() string {
	return string(ut)
}

// UserTypeValidator is a validator for the "user_type" field enum values. It is called by the builders before save.
func UserTypeValidator(ut UserType) error {
	switch ut {
	case UserTypeWechat, UserTypeTelegram, UserTypeGithub, UserTypeGoogle, UserTypeTwitter, UserTypeMicrosoft:
		return nil
	default:
		return fmt.Errorf("account: invalid enum value for user_type field: %q", ut)
	}
}
