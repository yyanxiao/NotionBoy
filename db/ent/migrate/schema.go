// Code generated by ent, DO NOT EDIT.

package migrate

import (
	"entgo.io/ent/dialect/entsql"
	"entgo.io/ent/dialect/sql/schema"
	"entgo.io/ent/schema/field"
)

var (
	// AccountsColumns holds the columns for the "accounts" table.
	AccountsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "created_at", Type: field.TypeTime, Default: schema.Expr("CURRENT_TIMESTAMP")},
		{Name: "updated_at", Type: field.TypeTime, Default: schema.Expr("CURRENT_TIMESTAMP")},
		{Name: "deleted", Type: field.TypeBool, Default: false},
		{Name: "uuid", Type: field.TypeUUID, Unique: true, Nullable: true},
		{Name: "user_id", Type: field.TypeString},
		{Name: "user_type", Type: field.TypeEnum, Nullable: true, Enums: []string{"wechat", "telegram", "github", "google", "twitter", "microsoft"}, Default: "wechat"},
		{Name: "database_id", Type: field.TypeString, Nullable: true},
		{Name: "access_token", Type: field.TypeString, Nullable: true},
		{Name: "notion_user_id", Type: field.TypeString, Nullable: true},
		{Name: "notion_user_email", Type: field.TypeString, Nullable: true},
		{Name: "is_latest_schema", Type: field.TypeBool, Default: false},
		{Name: "is_openai_api_user", Type: field.TypeBool, Default: false},
		{Name: "openai_api_key", Type: field.TypeString, Nullable: true},
		{Name: "api_key", Type: field.TypeUUID, Nullable: true},
		{Name: "is_admin", Type: field.TypeBool, Default: false},
	}
	// AccountsTable holds the schema information for the "accounts" table.
	AccountsTable = &schema.Table{
		Name:       "accounts",
		Columns:    AccountsColumns,
		PrimaryKey: []*schema.Column{AccountsColumns[0]},
		Indexes: []*schema.Index{
			{
				Name:    "account_user_id_user_type",
				Unique:  true,
				Columns: []*schema.Column{AccountsColumns[5], AccountsColumns[6]},
			},
		},
	}
	// ChatHistoriesColumns holds the columns for the "chat_histories" table.
	ChatHistoriesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "created_at", Type: field.TypeTime, Default: schema.Expr("CURRENT_TIMESTAMP")},
		{Name: "updated_at", Type: field.TypeTime, Default: schema.Expr("CURRENT_TIMESTAMP")},
		{Name: "deleted", Type: field.TypeBool, Default: false},
		{Name: "user_id", Type: field.TypeInt},
		{Name: "conversation_idx", Type: field.TypeInt},
		{Name: "conversation_id", Type: field.TypeUUID},
		{Name: "message_id", Type: field.TypeString, Nullable: true},
		{Name: "message_idx", Type: field.TypeInt, Nullable: true},
		{Name: "request", Type: field.TypeString, Nullable: true, Size: 2147483647},
		{Name: "response", Type: field.TypeString, Nullable: true, Size: 2147483647},
		{Name: "token_usage", Type: field.TypeInt, Nullable: true},
	}
	// ChatHistoriesTable holds the schema information for the "chat_histories" table.
	ChatHistoriesTable = &schema.Table{
		Name:       "chat_histories",
		Columns:    ChatHistoriesColumns,
		PrimaryKey: []*schema.Column{ChatHistoriesColumns[0]},
	}
	// ConversationsColumns holds the columns for the "conversations" table.
	ConversationsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "created_at", Type: field.TypeTime, Default: schema.Expr("CURRENT_TIMESTAMP")},
		{Name: "updated_at", Type: field.TypeTime, Default: schema.Expr("CURRENT_TIMESTAMP")},
		{Name: "deleted", Type: field.TypeBool, Default: false},
		{Name: "uuid", Type: field.TypeUUID, Unique: true},
		{Name: "user_id", Type: field.TypeUUID},
		{Name: "instruction", Type: field.TypeString, Nullable: true, Size: 2147483647},
		{Name: "title", Type: field.TypeString, Nullable: true},
		{Name: "token_usage", Type: field.TypeInt64, Default: 0},
	}
	// ConversationsTable holds the schema information for the "conversations" table.
	ConversationsTable = &schema.Table{
		Name:       "conversations",
		Columns:    ConversationsColumns,
		PrimaryKey: []*schema.Column{ConversationsColumns[0]},
		Indexes: []*schema.Index{
			{
				Name:    "conversation_user_id_created_at",
				Unique:  false,
				Columns: []*schema.Column{ConversationsColumns[5], ConversationsColumns[1]},
			},
		},
	}
	// ConversationMessagesColumns holds the columns for the "conversation_messages" table.
	ConversationMessagesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "created_at", Type: field.TypeTime, Default: schema.Expr("CURRENT_TIMESTAMP")},
		{Name: "updated_at", Type: field.TypeTime, Default: schema.Expr("CURRENT_TIMESTAMP")},
		{Name: "deleted", Type: field.TypeBool, Default: false},
		{Name: "uuid", Type: field.TypeUUID, Unique: true},
		{Name: "user_id", Type: field.TypeUUID},
		{Name: "conversation_id", Type: field.TypeUUID},
		{Name: "request", Type: field.TypeString, Nullable: true, Size: 2147483647},
		{Name: "response", Type: field.TypeString, Nullable: true, Size: 2147483647},
		{Name: "token_usage", Type: field.TypeInt64, Nullable: true},
		{Name: "model", Type: field.TypeString, Default: "gpt-3.5-turbo"},
		{Name: "conversation_conversation_messages", Type: field.TypeInt, Nullable: true},
	}
	// ConversationMessagesTable holds the schema information for the "conversation_messages" table.
	ConversationMessagesTable = &schema.Table{
		Name:       "conversation_messages",
		Columns:    ConversationMessagesColumns,
		PrimaryKey: []*schema.Column{ConversationMessagesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "conversation_messages_conversations_conversation_messages",
				Columns:    []*schema.Column{ConversationMessagesColumns[11]},
				RefColumns: []*schema.Column{ConversationsColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "conversationmessage_user_id_conversation_id_created_at",
				Unique:  false,
				Columns: []*schema.Column{ConversationMessagesColumns[5], ConversationMessagesColumns[6], ConversationMessagesColumns[1]},
			},
		},
	}
	// OrdersColumns holds the columns for the "orders" table.
	OrdersColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "created_at", Type: field.TypeTime, Default: schema.Expr("CURRENT_TIMESTAMP")},
		{Name: "updated_at", Type: field.TypeTime, Default: schema.Expr("CURRENT_TIMESTAMP")},
		{Name: "deleted", Type: field.TypeBool, Default: false},
		{Name: "uuid", Type: field.TypeUUID, Unique: true},
		{Name: "user_id", Type: field.TypeUUID},
		{Name: "product_id", Type: field.TypeUUID},
		{Name: "price", Type: field.TypeFloat64},
		{Name: "status", Type: field.TypeEnum, Enums: []string{"Unpaid", "Paying", "Paid", "Processing", "Cancelled", "Refunded", "Completed"}, Default: "Unpaid"},
		{Name: "note", Type: field.TypeString, Nullable: true, Size: 2147483647},
		{Name: "payment_info", Type: field.TypeString, Nullable: true, Size: 2147483647},
	}
	// OrdersTable holds the schema information for the "orders" table.
	OrdersTable = &schema.Table{
		Name:       "orders",
		Columns:    OrdersColumns,
		PrimaryKey: []*schema.Column{OrdersColumns[0]},
		Indexes: []*schema.Index{
			{
				Name:    "order_user_id_created_at",
				Unique:  false,
				Columns: []*schema.Column{OrdersColumns[5], OrdersColumns[1]},
			},
		},
	}
	// ProductsColumns holds the columns for the "products" table.
	ProductsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "created_at", Type: field.TypeTime, Default: schema.Expr("CURRENT_TIMESTAMP")},
		{Name: "updated_at", Type: field.TypeTime, Default: schema.Expr("CURRENT_TIMESTAMP")},
		{Name: "deleted", Type: field.TypeBool, Default: false},
		{Name: "uuid", Type: field.TypeUUID, Unique: true},
		{Name: "name", Type: field.TypeString, Default: "Free"},
		{Name: "description", Type: field.TypeString, Size: 2147483647},
		{Name: "price", Type: field.TypeFloat64},
		{Name: "token", Type: field.TypeInt64, Default: 10000},
		{Name: "storage", Type: field.TypeInt64, Default: 100},
	}
	// ProductsTable holds the schema information for the "products" table.
	ProductsTable = &schema.Table{
		Name:       "products",
		Columns:    ProductsColumns,
		PrimaryKey: []*schema.Column{ProductsColumns[0]},
	}
	// QuotaColumns holds the columns for the "quota" table.
	QuotaColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "created_at", Type: field.TypeTime, Default: schema.Expr("CURRENT_TIMESTAMP")},
		{Name: "updated_at", Type: field.TypeTime, Default: schema.Expr("CURRENT_TIMESTAMP")},
		{Name: "deleted", Type: field.TypeBool, Default: false},
		{Name: "user_id", Type: field.TypeInt},
		{Name: "plan", Type: field.TypeString},
		{Name: "reset_time", Type: field.TypeTime},
		{Name: "token", Type: field.TypeInt64},
		{Name: "token_used", Type: field.TypeInt64, Default: 0},
	}
	// QuotaTable holds the schema information for the "quota" table.
	QuotaTable = &schema.Table{
		Name:       "quota",
		Columns:    QuotaColumns,
		PrimaryKey: []*schema.Column{QuotaColumns[0]},
		Indexes: []*schema.Index{
			{
				Name:    "quota_user_id",
				Unique:  true,
				Columns: []*schema.Column{QuotaColumns[4]},
			},
		},
	}
	// WechatSessionColumns holds the columns for the "wechat_session" table.
	WechatSessionColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "created_at", Type: field.TypeTime, Default: schema.Expr("CURRENT_TIMESTAMP")},
		{Name: "updated_at", Type: field.TypeTime, Default: schema.Expr("CURRENT_TIMESTAMP")},
		{Name: "deleted", Type: field.TypeBool, Default: false},
		{Name: "session", Type: field.TypeBytes},
		{Name: "dummy_user_id", Type: field.TypeString, Unique: true},
	}
	// WechatSessionTable holds the schema information for the "wechat_session" table.
	WechatSessionTable = &schema.Table{
		Name:       "wechat_session",
		Columns:    WechatSessionColumns,
		PrimaryKey: []*schema.Column{WechatSessionColumns[0]},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		AccountsTable,
		ChatHistoriesTable,
		ConversationsTable,
		ConversationMessagesTable,
		OrdersTable,
		ProductsTable,
		QuotaTable,
		WechatSessionTable,
	}
)

func init() {
	ConversationMessagesTable.ForeignKeys[0].RefTable = ConversationsTable
	WechatSessionTable.Annotation = &entsql.Annotation{
		Table: "wechat_session",
	}
}
